--------------------- 0 -------------------
start , h
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Exits:
start ---------------------------------- h
Priority Queue:
  Node 1: Room=h, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Exits:
start , 0
Priority Queue:
  Node 1: Room=h, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
start ---------------------------------- 0
Priority Queue:
  Node 1: Room=h, Cost=1, Index=0
  Node 2: Room=0, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
start , t
Priority Queue:
  Node 1: Room=h, Cost=1, Index=0
  Node 2: Room=0, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
start ---------------------------------- t
Priority Queue:
  Node 1: Room=h, Cost=1, Index=0
  Node 2: Room=0, Cost=1, Index=1
  Node 3: Room=t, Cost=1, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
--------------------- 1 -------------------
h , start
Priority Queue:
  Node 1: Room=t, Cost=1, Index=0
  Node 2: Room=0, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
h ---------------------------------- start
Priority Queue:
  Node 1: Room=t, Cost=1, Index=0
  Node 2: Room=0, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
h , A
Priority Queue:
  Node 1: Room=t, Cost=1, Index=0
  Node 2: Room=0, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
h ---------------------------------- A
Priority Queue:
  Node 1: Room=t, Cost=1, Index=0
  Node 2: Room=0, Cost=1, Index=1
  Node 3: Room=A, Cost=2, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
h , n
Priority Queue:
  Node 1: Room=t, Cost=1, Index=0
  Node 2: Room=0, Cost=1, Index=1
  Node 3: Room=A, Cost=2, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
h ---------------------------------- n
Priority Queue:
  Node 1: Room=t, Cost=1, Index=0
  Node 2: Room=0, Cost=1, Index=1
  Node 3: Room=A, Cost=2, Index=2
  Node 4: Room=n, Cost=2, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
--------------------- 2 -------------------
t , start
Priority Queue:
  Node 1: Room=0, Cost=1, Index=0
  Node 2: Room=n, Cost=2, Index=1
  Node 3: Room=A, Cost=2, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
t ---------------------------------- start
Priority Queue:
  Node 1: Room=0, Cost=1, Index=0
  Node 2: Room=n, Cost=2, Index=1
  Node 3: Room=A, Cost=2, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Exits:
t , E
Priority Queue:
  Node 1: Room=0, Cost=1, Index=0
  Node 2: Room=n, Cost=2, Index=1
  Node 3: Room=A, Cost=2, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
t ---------------------------------- E
Priority Queue:
  Node 1: Room=0, Cost=1, Index=0
  Node 2: Room=n, Cost=2, Index=1
  Node 3: Room=A, Cost=2, Index=2
  Node 4: Room=E, Cost=2, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
--------------------- 3 -------------------
0 , o
Priority Queue:
  Node 1: Room=E, Cost=2, Index=0
  Node 2: Room=n, Cost=2, Index=1
  Node 3: Room=A, Cost=2, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Exits:
0 ---------------------------------- o
Priority Queue:
  Node 1: Room=E, Cost=2, Index=0
  Node 2: Room=n, Cost=2, Index=1
  Node 3: Room=A, Cost=2, Index=2
  Node 4: Room=o, Cost=2, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
0 , start
Priority Queue:
  Node 1: Room=E, Cost=2, Index=0
  Node 2: Room=n, Cost=2, Index=1
  Node 3: Room=A, Cost=2, Index=2
  Node 4: Room=o, Cost=2, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
0 ---------------------------------- start
Priority Queue:
  Node 1: Room=E, Cost=2, Index=0
  Node 2: Room=n, Cost=2, Index=1
  Node 3: Room=A, Cost=2, Index=2
  Node 4: Room=o, Cost=2, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
--------------------- 4 -------------------
E , a
Priority Queue:
  Node 1: Room=o, Cost=2, Index=0
  Node 2: Room=n, Cost=2, Index=1
  Node 3: Room=A, Cost=2, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Exits:
E ---------------------------------- a
Priority Queue:
  Node 1: Room=o, Cost=2, Index=0
  Node 2: Room=n, Cost=2, Index=1
  Node 3: Room=A, Cost=2, Index=2
  Node 4: Room=a, Cost=3, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
E , t
Priority Queue:
  Node 1: Room=o, Cost=2, Index=0
  Node 2: Room=n, Cost=2, Index=1
  Node 3: Room=A, Cost=2, Index=2
  Node 4: Room=a, Cost=3, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
E ---------------------------------- t
Priority Queue:
  Node 1: Room=o, Cost=2, Index=0
  Node 2: Room=n, Cost=2, Index=1
  Node 3: Room=A, Cost=2, Index=2
  Node 4: Room=a, Cost=3, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
--------------------- 5 -------------------
o , 0
Priority Queue:
  Node 1: Room=n, Cost=2, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=A, Cost=2, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
o ---------------------------------- 0
Priority Queue:
  Node 1: Room=n, Cost=2, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=A, Cost=2, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Exits:
o , n
Priority Queue:
  Node 1: Room=n, Cost=2, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=A, Cost=2, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Exits:
o ---------------------------------- n
Priority Queue:
  Node 1: Room=n, Cost=2, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=A, Cost=2, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
--------------------- 6 -------------------
n , e
Priority Queue:
  Node 1: Room=A, Cost=2, Index=0
  Node 2: Room=a, Cost=3, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
n ---------------------------------- e
Priority Queue:
  Node 1: Room=A, Cost=2, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
n , o
Priority Queue:
  Node 1: Room=A, Cost=2, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
n ---------------------------------- o
Priority Queue:
  Node 1: Room=A, Cost=2, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
n , m
Priority Queue:
  Node 1: Room=A, Cost=2, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
n ---------------------------------- m
Priority Queue:
  Node 1: Room=A, Cost=2, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
  Node 4: Room=m, Cost=3, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
n , h
Priority Queue:
  Node 1: Room=A, Cost=2, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
  Node 4: Room=m, Cost=3, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
n ---------------------------------- h
Priority Queue:
  Node 1: Room=A, Cost=2, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
  Node 4: Room=m, Cost=3, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
--------------------- 7 -------------------
A , c
Priority Queue:
  Node 1: Room=m, Cost=3, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
A ---------------------------------- c
Priority Queue:
  Node 1: Room=m, Cost=3, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
  Node 4: Room=c, Cost=3, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
A , h
Priority Queue:
  Node 1: Room=m, Cost=3, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
  Node 4: Room=c, Cost=3, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
A ---------------------------------- h
Priority Queue:
  Node 1: Room=m, Cost=3, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
  Node 4: Room=c, Cost=3, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
--------------------- 8 -------------------
m , a
Priority Queue:
  Node 1: Room=c, Cost=3, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
m ---------------------------------- a
Priority Queue:
  Node 1: Room=c, Cost=3, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
m , end
Priority Queue:
  Node 1: Room=c, Cost=3, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
m ---------------------------------- end
Priority Queue:
  Node 1: Room=c, Cost=3, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
  Node 4: Room=end, Cost=4, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Exits:
m , n
Priority Queue:
  Node 1: Room=c, Cost=3, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
  Node 4: Room=end, Cost=4, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Exits:
m ---------------------------------- n
Priority Queue:
  Node 1: Room=c, Cost=3, Index=0
  Node 2: Room=a, Cost=3, Index=1
  Node 3: Room=e, Cost=3, Index=2
  Node 4: Room=end, Cost=4, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
--------------------- 9 -------------------
c , A
Priority Queue:
  Node 1: Room=a, Cost=3, Index=0
  Node 2: Room=end, Cost=4, Index=1
  Node 3: Room=e, Cost=3, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Exits:
c ---------------------------------- A
Priority Queue:
  Node 1: Room=a, Cost=3, Index=0
  Node 2: Room=end, Cost=4, Index=1
  Node 3: Room=e, Cost=3, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
c , k
Priority Queue:
  Node 1: Room=a, Cost=3, Index=0
  Node 2: Room=end, Cost=4, Index=1
  Node 3: Room=e, Cost=3, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
c ---------------------------------- k
Priority Queue:
  Node 1: Room=a, Cost=3, Index=0
  Node 2: Room=end, Cost=4, Index=1
  Node 3: Room=e, Cost=3, Index=2
  Node 4: Room=k, Cost=4, Index=3
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
--------------------- 10 -------------------
a , m
Priority Queue:
  Node 1: Room=e, Cost=3, Index=0
  Node 2: Room=end, Cost=4, Index=1
  Node 3: Room=k, Cost=4, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
a ---------------------------------- m
Priority Queue:
  Node 1: Room=e, Cost=3, Index=0
  Node 2: Room=end, Cost=4, Index=1
  Node 3: Room=k, Cost=4, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Exits:
a , E
Priority Queue:
  Node 1: Room=e, Cost=3, Index=0
  Node 2: Room=end, Cost=4, Index=1
  Node 3: Room=k, Cost=4, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
a ---------------------------------- E
Priority Queue:
  Node 1: Room=e, Cost=3, Index=0
  Node 2: Room=end, Cost=4, Index=1
  Node 3: Room=k, Cost=4, Index=2
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
--------------------- 11 -------------------
e , n
Priority Queue:
  Node 1: Room=k, Cost=4, Index=0
  Node 2: Room=end, Cost=4, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
e ---------------------------------- n
Priority Queue:
  Node 1: Room=k, Cost=4, Index=0
  Node 2: Room=end, Cost=4, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Exits:
e , end
Priority Queue:
  Node 1: Room=k, Cost=4, Index=0
  Node 2: Room=end, Cost=4, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Exits:
e ---------------------------------- end
Priority Queue:
  Node 1: Room=k, Cost=4, Index=0
  Node 2: Room=end, Cost=4, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Exits:
--------------------- 12 -------------------
k , end
Priority Queue:
  Node 1: Room=end, Cost=4, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Exits:
k ---------------------------------- end
Priority Queue:
  Node 1: Room=end, Cost=4, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
k , c
Priority Queue:
  Node 1: Room=end, Cost=4, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
k ---------------------------------- c
Priority Queue:
  Node 1: Room=end, Cost=4, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
--------------------- 13 -------------------
end , k
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
end ---------------------------------- k
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
end , m
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Exits:
end ---------------------------------- m
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Exits:
end , e
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
end ---------------------------------- e
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: L
  EdgeIn: m, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 0, PriceOut: 0
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 0, PriceOut: 0
  CostIn: 4, CostOut: 4
  Split: false
Exits:
--------------------- 0 -------------------
start , t
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
start ---------------------------------- t
Priority Queue:
  Node 1: Room=t, Cost=0, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
start , h
Priority Queue:
  Node 1: Room=t, Cost=0, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
start ---------------------------------- h
Priority Queue:
  Node 1: Room=t, Cost=0, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
start , 0
Priority Queue:
  Node 1: Room=t, Cost=0, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
start ---------------------------------- 0
Priority Queue:
  Node 1: Room=t, Cost=0, Index=0
  Node 2: Room=0, Cost=0, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
--------------------- 1 -------------------
t , start
Priority Queue:
  Node 1: Room=0, Cost=0, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
t ---------------------------------- start
Priority Queue:
  Node 1: Room=0, Cost=0, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
t , E
Priority Queue:
  Node 1: Room=0, Cost=0, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
t ---------------------------------- E
Priority Queue:
  Node 1: Room=0, Cost=0, Index=0
  Node 2: Room=E, Cost=0, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
--------------------- 2 -------------------
0 , o
Priority Queue:
  Node 1: Room=E, Cost=0, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
0 ---------------------------------- o
Priority Queue:
  Node 1: Room=E, Cost=0, Index=0
  Node 2: Room=o, Cost=0, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
0 , start
Priority Queue:
  Node 1: Room=E, Cost=0, Index=0
  Node 2: Room=o, Cost=0, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
0 ---------------------------------- start
Priority Queue:
  Node 1: Room=E, Cost=0, Index=0
  Node 2: Room=o, Cost=0, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
--------------------- 3 -------------------
E , a
Priority Queue:
  Node 1: Room=o, Cost=0, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
E ---------------------------------- a
Priority Queue:
  Node 1: Room=o, Cost=0, Index=0
  Node 2: Room=a, Cost=0, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
E , t
Priority Queue:
  Node 1: Room=o, Cost=0, Index=0
  Node 2: Room=a, Cost=0, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
E ---------------------------------- t
Priority Queue:
  Node 1: Room=o, Cost=0, Index=0
  Node 2: Room=a, Cost=0, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
--------------------- 4 -------------------
o , 0
Priority Queue:
  Node 1: Room=a, Cost=0, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
o ---------------------------------- 0
Priority Queue:
  Node 1: Room=a, Cost=0, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
o , n
Priority Queue:
  Node 1: Room=a, Cost=0, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
o ---------------------------------- n
Priority Queue:
  Node 1: Room=a, Cost=0, Index=0
  Node 2: Room=n, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
--------------------- 5 -------------------
a , m
Priority Queue:
  Node 1: Room=n, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
a ---------------------------------- m
Priority Queue:
  Node 1: Room=n, Cost=1, Index=0
  Node 2: Room=m, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
a , E
Priority Queue:
  Node 1: Room=n, Cost=1, Index=0
  Node 2: Room=m, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Exits:
  m
a ---------------------------------- E
Priority Queue:
  Node 1: Room=n, Cost=1, Index=0
  Node 2: Room=m, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
--------------------- 6 -------------------
n , e
Priority Queue:
  Node 1: Room=m, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Exits:
  m
n ---------------------------------- e
Priority Queue:
  Node 1: Room=m, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
n , o
Priority Queue:
  Node 1: Room=m, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
n ---------------------------------- o
Priority Queue:
  Node 1: Room=m, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
n , m
Priority Queue:
  Node 1: Room=m, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
n ---------------------------------- m
Priority Queue:
  Node 1: Room=m, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
n , h
Priority Queue:
  Node 1: Room=m, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
n ---------------------------------- h
Priority Queue:
  Node 1: Room=m, Cost=1, Index=0
  Node 2: Room=h, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
--------------------- 7 -------------------
m , n
Priority Queue:
  Node 1: Room=h, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
m ---------------------------------- n
Priority Queue:
  Node 1: Room=h, Cost=1, Index=0
  Node 2: Room=n, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
m , a
Priority Queue:
  Node 1: Room=h, Cost=1, Index=0
  Node 2: Room=n, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
m ---------------------------------- a
Priority Queue:
  Node 1: Room=h, Cost=1, Index=0
  Node 2: Room=n, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
m , end
Priority Queue:
  Node 1: Room=h, Cost=1, Index=0
  Node 2: Room=n, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
m ---------------------------------- end
Priority Queue:
  Node 1: Room=h, Cost=1, Index=0
  Node 2: Room=n, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
--------------------- 8 -------------------
h , n
Priority Queue:
  Node 1: Room=n, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Exits:
  m
h ---------------------------------- n
Priority Queue:
  Node 1: Room=n, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
h , start
Priority Queue:
  Node 1: Room=n, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
h ---------------------------------- start
Priority Queue:
  Node 1: Room=n, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Exits:
  m
h , A
Priority Queue:
  Node 1: Room=n, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
h ---------------------------------- A
Priority Queue:
  Node 1: Room=n, Cost=1, Index=0
  Node 2: Room=A, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Exits:
  m
--------------------- 9 -------------------
n , e
Priority Queue:
  Node 1: Room=A, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Exits:
  m
n ---------------------------------- e
Priority Queue:
  Node 1: Room=A, Cost=1, Index=0
  Node 2: Room=e, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
n , o
Priority Queue:
  Node 1: Room=A, Cost=1, Index=0
  Node 2: Room=e, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
n ---------------------------------- o
Priority Queue:
  Node 1: Room=A, Cost=1, Index=0
  Node 2: Room=e, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
n , m
Priority Queue:
  Node 1: Room=A, Cost=1, Index=0
  Node 2: Room=e, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
n ---------------------------------- m
Priority Queue:
  Node 1: Room=A, Cost=1, Index=0
  Node 2: Room=e, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Exits:
  m
n , h
Priority Queue:
  Node 1: Room=A, Cost=1, Index=0
  Node 2: Room=e, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
n ---------------------------------- h
Priority Queue:
  Node 1: Room=A, Cost=1, Index=0
  Node 2: Room=e, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Exits:
  m
--------------------- 10 -------------------
A , c
Priority Queue:
  Node 1: Room=e, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Exits:
  m
A ---------------------------------- c
Priority Queue:
  Node 1: Room=e, Cost=1, Index=0
  Node 2: Room=c, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
A , h
Priority Queue:
  Node 1: Room=e, Cost=1, Index=0
  Node 2: Room=c, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
A ---------------------------------- h
Priority Queue:
  Node 1: Room=e, Cost=1, Index=0
  Node 2: Room=c, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
--------------------- 11 -------------------
e , n
Priority Queue:
  Node 1: Room=c, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Exits:
  m
e ---------------------------------- n
Priority Queue:
  Node 1: Room=c, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
e , end
Priority Queue:
  Node 1: Room=c, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
e ---------------------------------- end
Priority Queue:
  Node 1: Room=c, Cost=1, Index=0
  Node 2: Room=end, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Exits:
  m
--------------------- 12 -------------------
c , A
Priority Queue:
  Node 1: Room=end, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Exits:
  m
c ---------------------------------- A
Priority Queue:
  Node 1: Room=end, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
c , k
Priority Queue:
  Node 1: Room=end, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
c ---------------------------------- k
Priority Queue:
  Node 1: Room=end, Cost=1, Index=0
  Node 2: Room=k, Cost=1, Index=1
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 4, PriceOut: 4
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Exits:
  m
--------------------- 13 -------------------
end , m
Priority Queue:
  Node 1: Room=k, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 4, PriceOut: 4
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Exits:
  m
end ---------------------------------- m
Priority Queue:
  Node 1: Room=k, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 4, PriceOut: 4
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Exits:
  m
end , e
Priority Queue:
  Node 1: Room=k, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 4, PriceOut: 4
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Exits:
  m
end ---------------------------------- e
Priority Queue:
  Node 1: Room=k, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 4, PriceOut: 4
  CostIn: 1, CostOut: 1
  Split: false
Exits:
  m
end , k
Priority Queue:
  Node 1: Room=k, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 4, PriceOut: 4
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Exits:
  m
end ---------------------------------- k
Priority Queue:
  Node 1: Room=k, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 4, PriceOut: 4
  CostIn: 1, CostOut: 1
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Exits:
  m
--------------------- 14 -------------------
k , end
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 4, PriceOut: 4
  CostIn: 1, CostOut: 1
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
k ---------------------------------- end
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 4, PriceOut: 4
  CostIn: 1, CostOut: 1
  Split: false
Exits:
  m
k , c
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 4, PriceOut: 4
  CostIn: 1, CostOut: 1
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Exits:
  m
k ---------------------------------- c
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 4, PriceOut: 4
  CostIn: 1, CostOut: 1
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: L
  EdgeIn: n, EdgeOut: n
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: L
  EdgeIn: E, EdgeOut: E
  PriceIn: 3, PriceOut: 3
  CostIn: 0, CostOut: 0
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 1, PriceOut: 1
  CostIn: 0, CostOut: 0
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: L
  EdgeIn: t, EdgeOut: t
  PriceIn: 2, PriceOut: 2
  CostIn: 0, CostOut: 0
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: m
  EdgeIn: e, EdgeOut: L
  PriceIn: 4, PriceOut: 1152921504606846976
  CostIn: 1, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: n
  EdgeIn: a, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: m
  PriceIn: 2, PriceOut: 2
  CostIn: 1, CostOut: 1
  Split: true
Exits:
  m
--------------------- 0 -------------------
start , t
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
start ---------------------------------- t
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
start , h
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
start ---------------------------------- h
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
start , 0
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
start ---------------------------------- 0
Priority Queue:
  Node 1: Room=0, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
--------------------- 1 -------------------
0 , o
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
0 ---------------------------------- o
Priority Queue:
  Node 1: Room=o, Cost=2, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
0 , start
Priority Queue:
  Node 1: Room=o, Cost=2, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
0 ---------------------------------- start
Priority Queue:
  Node 1: Room=o, Cost=2, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
--------------------- 2 -------------------
o , 0
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
o ---------------------------------- 0
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
o , n
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
o ---------------------------------- n
Priority Queue:
  Node 1: Room=n, Cost=2, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
--------------------- 3 -------------------
n , e
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
n ---------------------------------- e
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
n , o
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
  m
  e
n ---------------------------------- o
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
n , m
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
n ---------------------------------- m
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
n , h
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
n ---------------------------------- h
Priority Queue:
  Node 1: Room=h, Cost=1, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
--------------------- 4 -------------------
h , start
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
  e
h ---------------------------------- start
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
h , A
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
  m
  e
h ---------------------------------- A
Priority Queue:
  Node 1: Room=A, Cost=2, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
h , n
Priority Queue:
  Node 1: Room=A, Cost=2, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Exits:
  m
  e
h ---------------------------------- n
Priority Queue:
  Node 1: Room=A, Cost=2, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
--------------------- 5 -------------------
A , c
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
A ---------------------------------- c
Priority Queue:
  Node 1: Room=c, Cost=3, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Exits:
  m
  e
A , h
Priority Queue:
  Node 1: Room=c, Cost=3, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
A ---------------------------------- h
Priority Queue:
  Node 1: Room=c, Cost=3, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
--------------------- 6 -------------------
c , A
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
c ---------------------------------- A
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Exits:
  m
  e
c , k
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
c ---------------------------------- k
Priority Queue:
  Node 1: Room=k, Cost=4, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 1, PriceOut: 1
  CostIn: 4, CostOut: 4
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
--------------------- 7 -------------------
k , end
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 1, PriceOut: 1
  CostIn: 4, CostOut: 4
  Split: false
Exits:
  m
  e
k ---------------------------------- end
Priority Queue:
  Node 1: Room=end, Cost=5, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 1, PriceOut: 1
  CostIn: 4, CostOut: 4
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: k, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 5, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
k , c
Priority Queue:
  Node 1: Room=end, Cost=5, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 1, PriceOut: 1
  CostIn: 4, CostOut: 4
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: k, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 5, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
k ---------------------------------- c
Priority Queue:
  Node 1: Room=end, Cost=5, Index=0
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: k, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 5, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 1, PriceOut: 1
  CostIn: 4, CostOut: 4
  Split: false
Exits:
  m
  e
--------------------- 8 -------------------
end , k
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 1, PriceOut: 1
  CostIn: 4, CostOut: 4
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: k, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 5, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
end ---------------------------------- k
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 1, PriceOut: 1
  CostIn: 4, CostOut: 4
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: k, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 5, CostOut: 1152921504606846976
  Split: false
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Exits:
  m
  e
end , m
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 1, PriceOut: 1
  CostIn: 4, CostOut: 4
  Split: false
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: k, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 5, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
end ---------------------------------- m
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 1, PriceOut: 1
  CostIn: 4, CostOut: 4
  Split: false
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: k, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 5, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
end , e
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 1, PriceOut: 1
  CostIn: 4, CostOut: 4
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: k, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 5, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Exits:
  m
  e
end ---------------------------------- e
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: 0
  Edges: map[o:true start:true]
  Prev: L
  EdgeIn: start, EdgeOut: start
  PriceIn: 0, PriceOut: 0
  CostIn: 1, CostOut: 1
  Split: false
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: e
  EdgeIn: k, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 5, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: h
  EdgeIn: o, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: L
  EdgeIn: A, EdgeOut: A
  PriceIn: 1, PriceOut: 1
  CostIn: 3, CostOut: 3
  Split: false
Room: o
  Edges: map[0:true n:true]
  Prev: L
  EdgeIn: 0, EdgeOut: 0
  PriceIn: 0, PriceOut: 0
  CostIn: 2, CostOut: 2
  Split: false
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: n, EdgeOut: n
  PriceIn: 1, PriceOut: 1
  CostIn: 1, CostOut: 1
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: L
  EdgeIn: h, EdgeOut: h
  PriceIn: 1, PriceOut: 1
  CostIn: 2, CostOut: 2
  Split: false
Room: k
  Edges: map[c:true end:true]
  Prev: L
  EdgeIn: c, EdgeOut: c
  PriceIn: 1, PriceOut: 1
  CostIn: 4, CostOut: 4
  Split: false
Exits:
  m
  e
--------------------- 0 -------------------
start , t
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: o
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: A
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: 0
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: k
  Edges: map[c:true end:true]
  Prev: c
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: k
  EdgeIn: L, EdgeOut: L
  PriceIn: 5, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
  k
start ---------------------------------- t
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: o
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: A
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: 0
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: k
  Edges: map[c:true end:true]
  Prev: c
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: k
  EdgeIn: L, EdgeOut: L
  PriceIn: 5, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Exits:
  m
  e
  k
start , h
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: k
  Edges: map[c:true end:true]
  Prev: c
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: k
  EdgeIn: L, EdgeOut: L
  PriceIn: 5, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: o
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: 0
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: A
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
  k
start ---------------------------------- h
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: o
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: A
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: 0
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: k
  Edges: map[c:true end:true]
  Prev: c
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: k
  EdgeIn: L, EdgeOut: L
  PriceIn: 5, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
  k
start , 0
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: 0
  Edges: map[o:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: k
  EdgeIn: L, EdgeOut: L
  PriceIn: 5, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: o
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: A
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: 0
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: k
  Edges: map[c:true end:true]
  Prev: c
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
  k
start ---------------------------------- 0
Priority Queue:
Graph:
Start Room: start
End Room: end
Ants: 10
Rooms:
Room: 0
  Edges: map[o:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: E
  Edges: map[a:true t:true]
  Prev: t
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: end
  Edges: map[e:true k:true m:true]
  Prev: k
  EdgeIn: L, EdgeOut: L
  PriceIn: 5, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: false
Room: start
  Edges: map[0:true h:true t:true]
  Prev: L
  EdgeIn: L, EdgeOut: L
  PriceIn: 0, PriceOut: 0
  CostIn: 0, CostOut: 0
  Split: false
Room: t
  Edges: map[E:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: e
  Edges: map[end:true n:true]
  Prev: n
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: a
  Edges: map[E:true m:true]
  Prev: E
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: n
  Edges: map[e:true h:true m:true o:true]
  Prev: o
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: m
  Edges: map[a:true end:true n:true]
  Prev: a
  EdgeIn: L, EdgeOut: L
  PriceIn: 1152921504606846976, PriceOut: 1152921504606846976
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: c
  Edges: map[A:true k:true]
  Prev: A
  EdgeIn: L, EdgeOut: L
  PriceIn: 3, PriceOut: 3
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: o
  Edges: map[0:true n:true]
  Prev: 0
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: h
  Edges: map[A:true n:true start:true]
  Prev: start
  EdgeIn: L, EdgeOut: L
  PriceIn: 1, PriceOut: 1
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: A
  Edges: map[c:true h:true]
  Prev: h
  EdgeIn: L, EdgeOut: L
  PriceIn: 2, PriceOut: 2
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Room: k
  Edges: map[c:true end:true]
  Prev: c
  EdgeIn: L, EdgeOut: L
  PriceIn: 4, PriceOut: 4
  CostIn: 1152921504606846976, CostOut: 1152921504606846976
  Split: true
Exits:
  m
  e
  k
L1-t L2-0 L3-h 
L1-E L2-o L3-A L4-t L5-0 L6-h 
L1-a L2-n L3-c L4-E L5-o L6-A L7-t L8-0 L9-h 
L1-m L2-e L3-k L4-a L5-n L6-c L7-E L8-o L9-A L10-t 
L1-end L2-end L3-end L4-m L5-e L6-k L7-a L8-n L9-c L10-E 
L4-end L5-end L6-end L7-m L8-e L9-k L10-a 
L7-end L8-end L9-end L10-m 
L10-end 
